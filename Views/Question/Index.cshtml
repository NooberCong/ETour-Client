@model QuestionListModel

@{
    ViewData["Title"] = "Questions";
    var tblId = "questionTbl";
}




<div class="container py-5">
    <h3 class="mb-5">My Questions</h3>

    <div class="table-responsive">
        <table id="@tblId" class="table">
            <thead>
                <tr>
                    <th scope="col" class="text-center">Title</th>
                    <th scope="col" class="text-center">Date</th>
                    <th scope="col" class="text-center">Category</th>
                    <th scope="col" class="text-center">Status</th>
                    <th scope="col" class="text-center no-ordering">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var q in Model.Questions)
                {
                    <tr>
                        <td class="text-center">@q.Title</td>
                        <td class="text-center">@q.LastUpdated</td>
                        <td class="text-center">@q.Category</td>
                        <td class="text-center"><span class="@q.Status.Badge()">@q.Status.ToCustomString()</span></td>
                        <td class="text-center">
                            <a asp-action="Detail" asp-route-id=@q.ID class="text-primary mr-3"><i class="far fa-eye"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <h3 class="my-5">Type your question here</h3>
    <form asp-action="Create" method="post" id="submitForm">

        <div class="form-group">
            <b> <label asp-for="@Model._Question.Title"></label></b>
            <input asp-for="@Model._Question.Title" type="text" class="form-control" placeholder="Enter title" id="title">
        </div>
        <div class="form-group">
            <b><label asp-for="@Model._Question.Content"></label></b>
            <textarea asp-for="@Model._Question.Content" type="text" rows="5" cols="20" class="form-control" placeholder="Type the question here" id="areaText"></textarea>
        </div>
        <div class="form-group">
            <b> <label asp-for="@Model._Question.Category"></label></b>
            <select asp-for="@Model._Question.Category" class="selectpicker" asp-items="@Html.GetEnumSelectList<Question.QuestionCategory>()" id="category"></select>
        </div>
        <div class="form-group" hidden>
            <b> <label asp-for="@Model.AuthorID"></label></b>
            <input asp-for="@Model.AuthorID" type="text" class="form-control" id="authorID">
        </div>
        <div class="form-group" hidden>
            <b> <label asp-for="@Model._Question.ID"></label></b>
            <input asp-for="@Model._Question.ID" type="text" class="form-control" id="questionID">
        </div>

        <button  class="btn btn-primary mb-2">Submit</button>
    </form>
</div>


<script src="https://unpkg.com/@@aspnet/signalr@1.0.2/dist/browser/signalr.js"></script>
<script src="https://unpkg.com/@@microsoft/signalr@6.0.0-preview.4.21253.5/dist/browser/signalr.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js" integrity="sha256-CutOzxCRucUsn6C6TcEYsauvvYilEniTXldPa6/wu0k=" crossorigin="anonymous"></script>

<script>

    var connection = new signalR.HubConnectionBuilder()
        .withUrl("https://localhost:44360/qa")
        .configureLogging(signalR.LogLevel.Information)
        .build();



    connection.start().then(() => console.log("Connect to server success")).catch(err => console.log(`Connect to server failed, error: ${err}`));


    function submitQuestion() {

        let questionForm = document.getElementById("submitForm");

        let authorId = document.getElementById("authorID").value;
        let title = document.getElementById("title").value;
        let category = document.getElementById("category").value;

    console.log(authorId);
    console.log(title);
    console.log(category);
    debugger;


    sendQuestion(authorId, title, category);


}

function sendQuestion(authorId, title, category) {

    if (title && title.length) {
        connection.invoke('sendQuestions', authorId, title, category);

    } else {
        console.log("Can't send");
    }

    console.log(authorId);
    console.log(title);
    console.log(category);

}

connection.on("ReceiveQuestion", test);

    function test(name, title, cate, date, priority, status, questionId) { console.log(`Someone asked "${questionId}"`); }


</script>



<partial name="_DataTable" model="@tblId" />

